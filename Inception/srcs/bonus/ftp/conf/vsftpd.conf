use_localtime=YES
anonymous_enable=YES
local_enable=YES
no_anon_password=YES
seccomp_sandbox=NO
pasv_enable=YES
pasv_min_port=21100
pasv_max_port=21110
allow_writeable_chroot=YES
pasv_address=0.0.0.0
write_enable=YES
pam_service_name=vsftpd
pasv_promiscuous=YES
dirmessage_enable=YES
connect_from_port_20=YES
listen=YES
xferlog_enable=YES
xferlog_file=/var/log/xferlog
xferlog_std_format=YES
log_ftp_protocol=YES
vsftpd_log_file=/var/log/vsftpd.log
syslog_enable=NO
dual_log_enable=YES




# # If enabled, vsftpd will display directory listings with the time in your local time zone. The default is to display GMT.
# # The times returned by the MDTM FTP command are also affected by this option.
# use_localtime=YES
# # Controls whether anonymous logins are permitted or not. If enabled, both the usernames ftp and anonymous are recognised as anonymous logins.
# anonymous_enable=YES
# # Controls whether local logins are permitted or not. If enabled, normal user accounts in /etc/passwd (or wherever your PAM config references) may be used to log in.
# # This must be enable for any non-anonymous login to work, including virtual users.
# local_enable=YES
# # When enabled, this prevents vsftpd from asking for an anonymous password - the anonymous user will log straight in.
# no_anon_password=YES
# # This is used to prevent the error "500 OOPS: priv_sock_get_cmd" cause seccomp filter sanboxing is enabled by default on amd64, to workaround we set it to NO
# seccomp_sandbox=NO
# # Set to NO if you want to disallow the PASV method of obtaining a data connection.
# pasv_enable=YES
# # The minimum port to allocate for PASV style data connections. Can be used to specify a narrow port range to assist firewalling.
# pasv_min_port=21100
# # The maximum port to allocate for PASV style data connections. Can be used to specify a narrow port range to assist firewalling.
# pasv_max_port=21110
# # It allows for your dot files to be editable, which is often a control mechanism.
# allow_writeable_chroot=YES
# # Set to YES if you want to use a hostname (as opposed to IP address) in the pasv_address option.
# pasv_address=0.0.0.0
# # This controls whether any FTP commands which change the filesystem are allowed or not.
# write_enable=YES
# # This string is the name of the PAM service vsftpd will use.
# pam_service_name=vsftpd
# #Set to YES if you want to disable the PASV security check that ensures the data connection originates from the same IP address as the control connection.
# # Only enable if you know what you are doing! The only legitimate use for this is in some form of secure tunnelling scheme, or perhaps to facilitate FXP support.
# pasv_promiscuous=YES
# # If enabled, users of the FTP server can be shown messages when they first enter a new directory.
# # By default, a directory is scanned for the file .message, but that may be overridden with the configuration setting message_file.
# dirmessage_enable=YES
# # This controls whether PORT style data connections use port 20 (ftp-data) on the server machine.
# # For security reasons, some clients may insist that this is the case. Conversely, disabling this option enables vsftpd to run with slightly less privilege.
# connect_from_port_20=YES
# # If enabled, vsftpd will run in standalone mode. This means that vsftpd must not be run from an inetd of some kind.
# # Instead, the vsftpd executable is run once directly. vsftpd itself will then take care of listening for and handling incoming connections.
# listen=YES
# # If enabled, a log file will be maintained detailling uploads and downloads.
# # By default, this file will be placed at /var/log/vsftpd.log, but this location may be overridden using the configuration setting vsftpd_log_file.
# xferlog_enable=YES
# # This option is the name of the file to which we write the wu-ftpd style transfer log.
# # The transfer log is only written if the option xferlog_enable is set, along with xferlog_std_format. Alternatively, it is written if you have set the option dual_log_enable.
# xferlog_file=/var/log/xferlog
# # If enabled, the transfer log file will be written in standard xferlog format, as used by wu-ftpd. This is useful because you can reuse existing transfer statistics generators.
# # The default format is more readable, however. The default location for this style of log file is /var/log/xferlog, but you may change it with the setting xferlog_file.
# xferlog_std_format=YES
# # When enabled, all FTP requests and responses are logged, providing the option xferlog_std_format is not enabled. Useful for debugging.
# log_ftp_protocol=YES
# # This option is the name of the file to which we write the vsftpd style log file. This log is only written if the option xferlog_enable is set, and xferlog_std_format is NOT set. 
# # Alternatively, it is written if you have set the option dual_log_enable. 
# # One further complication - if you have set syslog_enable, then this file is not written and output is sent to the system log instead.
# vsftpd_log_file=/var/log/vsftpd.log
# # If enabled, then any log output which would have gone to /var/log/vsftpd.log goes to the system log instead. Logging is done under the FTPD facility.
# syslog_enable=NO
# # If enabled, two log files are generated in parallel, going by default to /var/log/xferlog and /var/log/vsftpd.log.
# # The former is a wu-ftpd style transfer log, parseable by standard tools. The latter is vsftpd's own style log.
# dual_log_enable=YES